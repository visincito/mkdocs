{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentaci\u00f3n","text":"<p>P\u00e1gina con documentos que quiero tener a mano en caso de necesidad.</p> <p>For full documentation visit mkdocs.org.</p>"},{"location":"about/","title":"About","text":"<p>This is a little personal Knowledge Base</p>"},{"location":"asterisk-dongle/","title":"On Ubuntu 22 Asterisk 18 FreePBX 16","text":"<pre><code>FreePBX 16 OS VERSION=\"22.04.3 LTS (Jammy Jellyfish)\"\nAsterisk 18.19.0 FreePBX 16.0.33\n</code></pre> <p>I combined all the required files and sources Except OS in one tar file. Descarga aqu\u00ed</p> <p>You will find all of these steps in install.sh file inside the tar file it is recommended to copy paste the commands not to run the script, since it is not prepared for autoinstall Install OS ubuntu 18 and enable root on ssh access then follow the steps</p> <p>Move all files using winscp to root directory</p>","tags":["asterisk","dongle"]},{"location":"asterisk-dongle/#server-update-packages-and-add-repos-then-reboot","title":"Server update packages and add repos then reboot","text":"<pre><code>curl -o /etc/apt/trusted.gpg.d/mariadb_release_signing_key.asc 'https://mariadb.org/mariadb_release_signing_key.asc'\n</code></pre> <pre><code>sh -c \"echo 'deb https://ftp.yz.yamagata-u.ac.jp/pub/dbms/mariadb/repo/10.10/ubuntu jammy main' &gt;&gt;/etc/apt/sources.list\"\n</code></pre> <pre><code>LC_ALL=C.UTF-8add-apt-repositoryppa:ondrej/php\n\napt update\napt upgrade\nreboot\n</code></pre>","tags":["asterisk","dongle"]},{"location":"asterisk-dongle/#install-packages","title":"Install packages","text":"<pre><code>apt-get install unzip git gnupg2 curl libnewt-dev libssl-dev libncurses5-dev subversion libsqlite3-dev build-essential libjansson-dev libxml2-dev uuid-dev subversion apt-transport-https curl sox mpg123 unixodbc unixodbc-dev libmariadb3 libmariadb-dev\napt-get install apache2\napt-get install mariadb-server\napt-get install php7.4 libapache2-mod-php7.4 php7.4-cgi php7.4-common php7.4-curl php7.4-mbstring php7.4-gd php7.4-mysql php7.4-bcmath php7.4-zip php7.4-xml php7.4-imap php7.4-json php7.4-snmp\napt-get install php-pear\napt-get install nodejsnpm\napt-get install python3-certbot-apache\n</code></pre>","tags":["asterisk","dongle"]},{"location":"asterisk-dongle/#asterisk-build","title":"Asterisk build","text":"<pre><code>tar zxf asterisk-18-current.tar.gz\ncd asterisk-18.*/\n./contrib/scripts/get_mp3_source.sh\n./contrib/scripts/install_prereq install\n./configure\nmake menuselect\n</code></pre>","tags":["asterisk","dongle"]},{"location":"asterisk-dongle/#select-app_macro-module-format-mp3","title":"select app_macro module, format mp3","text":"<pre><code>make -j2\nmake install install-headers install-logrotate\nmake samples\nmake config\nldconfig\ngroupadd asterisk\nuseradd -r -d /var/lib/asterisk -g asterisk asterisk \nusermod -aG audio,dialout asterisk \nchown -R asterisk.asterisk /etc/asterisk\nchown -R asterisk.asterisk /var/{lib,log,spool}/asterisk\nchown -R asterisk.asterisk /usr/lib/asterisk\n</code></pre>","tags":["asterisk","dongle"]},{"location":"asterisk-dongle/#fix-asterisk","title":"fix asterisk","text":"<pre><code>cd\necho 'AST_USER=\"asterisk\"' &gt;&gt;/etc/default/asterisk\necho 'AST_GROUP=\"asterisk\"' &gt;&gt;/etc/default/asterisk\nsed -i 's/;\\[radius\\]/[radius]/g' /etc/asterisk/cdr.conf\necho 'radiuscfg =&gt; /etc/radcli/radiusclient.conf' &gt;&gt;/etc/asterisk/cdr.conf\nsed -i 's\";radiuscfg =&gt; /usr/local/etc/radiusclient-ng/radiusclient.conf\"radiuscfg =&gt; /etc/radcli/radiusclient.conf\"g'/etc/asterisk/cel.conf\nsystemctl restart asterisk\n</code></pre>","tags":["asterisk","dongle"]},{"location":"asterisk-dongle/#fix-webserver","title":"Fix webserver","text":"<pre><code>a2enmod rewrite \nrm -rf /var/www/html\nsed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf\nsed -i 's/^\\(User\\|Group\\).*/\\1 asterisk/' /etc/apache2/apache2.conf\nsed -i 's/\\(^upload_max_filesize = \\).*/\\12000M/' /etc/php/7.4/cli/php.ini\nsed -i 's/\\(^upload_max_filesize = \\).*/\\12000M/' /etc/php/7.4/apache2/php.ini\nsed -i 's/\\(^memory_limit = \\).*/\\1512M/' /etc/php/7.4/apache2/php.ini\nsystemctl restart apache2\n</code></pre>","tags":["asterisk","dongle"]},{"location":"asterisk-dongle/#freepbx-install","title":"FreePBX install","text":"<pre><code>tar -xvzf freepbx-16.0-latest.tgz\ncd freepbx \n./install -n\nfwconsole ma downloadinstall certman\nfwconsole ma install pm2\n</code></pre>","tags":["asterisk","dongle"]},{"location":"asterisk-dongle/#install-dongles-driver","title":"Install dongles driver","text":"<pre><code>cd\necho 'KERNEL==\"ttyUSB*\", MODE=\"0666\", OWNER=\"asterisk\", GROUP=\"uucp\"'&gt;/etc/ udev/rules.d/92-dongle.rules\necho 'rungroup = dialout'&gt;&gt;/etc/asterisk/asterisk.conf\nmv dongle.conf /etc/asterisk/dongle.conf\nchown asterisk.asterisk /etc/asterisk/dongle.conf\nchmod 664 /etc/asterisk/dongle.conf\nmv extensions_custom.conf /etc/asterisk/extensions_custom.conf\nchown asterisk.asterisk /etc/asterisk/extensions_custom.conf\n</code></pre> <p>chmod 664 /etc/asterisk/extensions_custom.conf</p>","tags":["asterisk","dongle"]},{"location":"asterisk-dongle/#build-the-driver","title":"Build the driver","text":"<pre><code>unzip asterisk-chan-dongle-master* \ncd asterisk-chan-dongle-master/\nautoupdate\naclocal\nautoconf\nautomake -a ./bootstrap\n./configure  --with-astversion=18.19.0\nmake clean\nmake\nmake install\nchmod 755 /usr/lib/asterisk/modules/chan_dongle.so\nsystemctl restart asterisk\n</code></pre>","tags":["asterisk","dongle"]},{"location":"asterisk-dongle/#secure-mysql-database-and-add-root-password","title":"Secure mysql database and add root password","text":"<pre><code>mysql_secure_installation\n</code></pre>","tags":["asterisk","dongle"]},{"location":"asterisk-dongle/#reboot","title":"Reboot","text":"<pre><code>apt autoremove\nreboot\n</code></pre>","tags":["asterisk","dongle"]},{"location":"asterisk-dongle/#navigate-through-web-page-to-server","title":"Navigate through web page to server","text":"","tags":["asterisk","dongle"]},{"location":"asterisk-dongle/#set-admin-username-and-password","title":"Set admin username and password","text":"","tags":["asterisk","dongle"]},{"location":"asterisk-googletts/","title":"Google TTS script for Asterisk","text":"<p>This script makes use of Google's translate text to speech service in order to render text to speech and play it back to the user. It supports a variety of different languages.</p> <p>This TTS service is 'unofficial' and not supported by Google, it can be terminated at any point with no warning. People looking for TTS solutions to base their projects/products on should look for alternative, officially supported  services.</p>","tags":["SIP","VoIP"]},{"location":"asterisk-googletts/#requirements","title":"Requirements","text":"<ul> <li>Perl --- (The Perl Programming Language)</li> <li>perl-libwww  --- (The World-Wide Web library for Perl)</li> <li>perl-LWP-Protocol-https ---  (For HTTPS support)</li> <li>sox ---  (Sound eXchange, sound processing program)</li> <li>mpg123 ---  (MPEG Audio Player and decoder)</li> <li>Internet access in order to contact google and get the voice data.</li> </ul>","tags":["SIP","VoIP"]},{"location":"asterisk-googletts/#installation","title":"Installation","text":"<p>Repository</p> <p>To install copy googletts.agi to your agi-bin directory. Usually this is /var/lib/asterisk/agi-bin/ To make sure check your /etc/asterisk/asterisk.conf file</p>","tags":["SIP","VoIP"]},{"location":"asterisk-googletts/#usage","title":"Usage","text":"Syntaxys In Dialplan<pre><code>agi(googletts.agi,\"text\",[language],[intkey],[speed]) \n</code></pre> <p>This will invoke the Google TTS engine, render the text string to speech and play it back to the user. If 'intkey' is set the script will wait for user input. Any given interrupt keys will cause the playback to immediately terminate and the dialplan to proceed to the matching extension (this is mainly for use in IVR, see README for examples). If 'speed' is set the speech rate is altered by that factor (defaults to 1.2).</p> <p>The script contacts Google's TTS service in order to get the voice data which then stores in a local cache (by default /tmp/) for future use. Parameters like default language, enabling or disabling caching and cache dir can be set up by editing the script.</p>","tags":["SIP","VoIP"]},{"location":"asterisk-googletts/#examples","title":"Examples","text":"sample dialplan code for your extensions.conf<pre><code>;GoogleTTS Demo\n;PLayback messages to user\n\nexten =&gt; 1234,1,Answer()\n    ;;Play mesage in English:\nexten =&gt; 1234,n,agi(googletts.agi,\"This is a simple google text to speech test in english.\",en)\n    ;;Play message in Spanish\nexten =&gt; 1234,n,agi(googletts.agi,\"Esta es una simple prueba en espa\u00f1ol.\",es)\n    ;;Play message in Greek\nexten =&gt; 1234,n,agi(googletts.agi,\"\u0391\u03c5\u03c4\u03cc \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03b1\u03c0\u03bb\u03cc \u03c4\u03ad\u03c3\u03c4 \u03c3\u03c4\u03b1 \u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac.\",el)\n\n;A simple dynamic IVR using GoogleTTS\"\n[my_ivr]\n\nexten =&gt; s,1,Answer()\nexten =&gt; s,n,Set(TIMEOUT(digit)=5)\nexten =&gt; s,n,agi(googletts.agi,\"Welcome to my small interactive voice response menu.\",en)\n    ;;Wait for digit:\nexten =&gt; s,n(start),agi(googletts.agi,\"Please dial a digit.\",en,any)\nexten =&gt; s,n,WaitExten()\n\n    ;;PLayback the name of the digit and wait for another one:\nexten =&gt; _X,1,agi(googletts.agi,\"You just pressed ${EXTEN}. Try another one please.\",en,any)\nexten =&gt; _X,n,WaitExten()\n\nexten =&gt; i,1,agi(googletts.agi,\"Invalid extension.\",en)\nexten =&gt; i,n,goto(s,start)\n\nexten =&gt; t,1,agi(googletts.agi,\"Request timed out.\",en)\nexten =&gt; t,n,goto(s,start)\n\nexten =&gt; h,1,Hangup()\n</code></pre>","tags":["SIP","VoIP"]},{"location":"asterisk-googletts/#supported-languages","title":"Supported Languages","text":"Languages Code List Language Code Afrikaans: af Albanian: sq Amharic: am Arabic: ar Armenian: hy Azerbaijani: az Basque: eu Belarusian: be Bengali: bn Bihari: bh Bosnian: bs Breton: br Bulgarian: bg Cambodian: km Catalan: ca Chinese Simplified: zh-CN Chinese Traditional: zh-TW Corsican: co Croatian: hr Czech: cs Danish: da Dutch: nl English: en Esperanto: eo Estonian: et Faroese: fo Filipino: tl Finnish: fi French: fr Frisian: fy Galician: gl Georgian: ka German: de Greek: el Guarani: gn Gujarati: gu Hausa: ha Hebrew: iw Hindi: hi Hungarian: hu Icelandic: is Indonesian: id Interlingua: ia Irish: ga Italian: it Japanese: ja Javanese: jw Kannada: kn Kazakh: kk Kinyarwanda: rw Kirundi: rn Korean: ko Kurdish: ku Kyrgyz: ky Laothian: lo Latin: la Latvian: lv Lingala: ln Lithuanian: lt Macedonian: mk Malagasy: mg Malay: ms Malayalam: ml Maltese: mt Maori: mi Marathi: mr Moldavian: mo Mongolian: mn Montenegrin: sr-ME Nepali: ne Norwegian: no Norwegian Nynorsk: nn Occitan: oc Oriya: or Oromo: om Pashto: ps Persian: fa Polish: pl Portuguese: pt Portuguese Brazil: pt-BR Portuguese Portugal: pt-PT Punjabi: pa Quechua: qu Romanian: ro Romansh: rm Russian: ru Scots Gaelic: gd Serbian: sr Serbo-Croatian: sh Sesotho: st Shona: sn Sindhi: sd Sinhalese: si Slovak: sk Slovenian: sl Somali: so Spanish: es Sundanese: su Swahili: sw Swedish: sv Tajik: tg Tamil: ta Tatar: tt Telugu: te Thai: th Tigrinya: ti Tonga: to Turkish: tr Turkmen: tk Twi: tw Uighur: ug Ukrainian: uk Urdu: ur Uzbek: uz Vietnamese: vi Welsh: cy Xhosa: xh Yiddish: yi Yoruba: yo Zulu: zu","tags":["SIP","VoIP"]},{"location":"asterisk-googletts/#security-considerations","title":"Security Considerations","text":"<p>This script contacts Google servers in order to get voice data. The script uses TLS to encrypt all the traffic between your pbx and these servers so no 3<sup>rd</sup> party can eavesdrop your communication, but your data will be available to Google under a not yet defined policy.</p>","tags":["SIP","VoIP"]},{"location":"asterisk-googletts/#tiny-version","title":"Tiny version","text":"<p>The '-tiny' suffixed scripts use the HTTP::Tiny perl module instead of LWP::UserAgent. This makes them a lot faster when run in small embedded systems or boards like the Raspberry pi. They can be used as an in-place replacement of the normal versions of the TTS scripts and expose the same interface/cli args. To use them just make sure you have HTTP::Tiny installed. In debian or ubuntu based distros: 'apt-get install libhttp-tiny-perl' In distros that don't have it in their repos: 'cpan HTTP::Tiny' It also requires mp3 format support in sox in order to avoid the use of mpg123.</p>","tags":["SIP","VoIP"]},{"location":"asterisk-googletts/#license","title":"License","text":"<p>The GoogleTTS script for asterisk is distributed under the GNU General Public License v2. See COPYING for details.</p>","tags":["SIP","VoIP"]},{"location":"asterisk-googletts/#homepage","title":"Homepage","text":"<p>http://zaf.github.com/asterisk-googletts/</p> <p>Fork repository:</p> <p>https://github.com/visincito/asterisk-googletts</p>","tags":["SIP","VoIP"]},{"location":"asterisk-install/","title":"Compilar e Instalar Asterisk","text":"","tags":["asterisk","SIP","VoIP"]},{"location":"asterisk-install/#install-development-tools","title":"Install Development Tools","text":"<pre><code>sudo dnf group -y install \"Development Tools\"\nsudo dnf -y install git wget\n</code></pre>","tags":["asterisk","SIP","VoIP"]},{"location":"asterisk-install/#install-asterisk","title":"Install Asterisk","text":"<p>Downloading and Configuring the Asterisk Build\u00b6 Before you download this script, make sure you have the latest version. To do so, navigate to the Asterisk download link here and look for the latest build of Asterisk. Then copy the link location. As of the writing of this document, the following was the latest build:</p> <pre><code>wget http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-20-current.tar.gz \ntar xvfz asterisk-20-current.tar.gz\ncd asterisk-20.0.0/\n</code></pre> <p>Before running the install_prereq below (and the remaining commands), you are going to need to be the superuser or root. It's much easier at this point to get into sudo permanently for a while. We will exit back out of sudo later in the process:</p> <pre><code>sudo -s\ncontrib/scripts/install_prereq install\n</code></pre> <p>You should see the following when the script completes:</p> <pre><code>#############################################\n## install completed successfully\n#############################################\n</code></pre> <p>Now that all of the required packages are installed, our next step is to configure and build Asterisk:</p> <pre><code>./configure --libdir=/usr/lib64 --with-jansson-bundled=yes\n</code></pre> <p>Assuming that the configuration runs without issue, you should get a large ASCII Asterisk emblem, followed by the following on Rocky Linux:</p> <pre><code>```python\nconfigure: Package configured for:\nconfigure: OS type  : linux-gnu\nconfigure: Host CPU : x86_64\nconfigure: build-cpu:vendor:os: x86_64 : pc : linux-gnu :\nconfigure: host-cpu:vendor:os: x86_64 : pc : linux-gnu :\nSet Asterisk menu options [For more options]\u00b6\n```\n</code></pre> <p>This is one of the steps where the administrator is going to need to do his homework. There are a lot of menu options that you may or may not need. Running the following command:</p> <pre><code>make menuselect\n</code></pre> <p>will bring you to a menu select screen:</p> <p></p> <p>Look through these options carefully and make selections based on your requirements. As stated earlier, this may take some additional homework.</p>","tags":["asterisk","SIP","VoIP"]},{"location":"asterisk-install/#build-and-install-asterisk","title":"Build and Install Asterisk","text":"<p>To build, we want to execute the following commands in succession:</p> <pre><code>make\nmake install\n</code></pre> <p>Installing the documentation isn't required, but unless you are a communications server expert, you'll want them installed:</p> <pre><code>make progdocs\n</code></pre> <p>Next install the basic PBX and make the config. The basic PBX is just that, very basic! You will probably need to make changes going forward to get your PBX to function as you want it to.</p> <pre><code>make basic-pbx\nmake config\n</code></pre>","tags":["asterisk","SIP","VoIP"]},{"location":"asterisk-install/#asterisk-configuration","title":"Asterisk Configuration","text":"<p>Create User &amp; Group You'll need a specific user just for asterisk. Might as well create it now.</p> <pre><code>groupadd asterisk\nuseradd -r -d /var/lib/asterisk -g asterisk asterisk\nchown -R asterisk.asterisk /etc/asterisk /var/{lib,log,spool}/asterisk /usr/lib64/asterisk\nrestorecon -vr {/etc/asterisk,/var/lib/asterisk,/var/log/asterisk,/var/spool/asterisk}\n</code></pre> <p>Now that the bulk of our work is completed, go ahead and exit out of the sudo -s command. This will require that most of the remaining commands use sudo again:</p> <pre><code>exit\n</code></pre>","tags":["asterisk","SIP","VoIP"]},{"location":"asterisk-install/#set-default-user-group","title":"Set Default User &amp; Group","text":"<pre><code>sudo vi /etc/default/asterisk\n</code></pre> <p>Remove the comments on the two lines below and save:</p> <pre><code>AST_USER=\"asterisk\"\nAST_GROUP=\"asterisk\"\n\nsudo vi /etc/asterisk/asterisk.conf\n</code></pre> <p>Remove the comments on the two lines below and save:</p> <p>runuser = asterisk ; The user to run as. rungroup = asterisk ; The group to run as.</p>","tags":["asterisk","SIP","VoIP"]},{"location":"asterisk-install/#configure-asterisk-service","title":"Configure Asterisk Service","text":"<pre><code>sudo systemctl enable asterisk\n</code></pre>","tags":["asterisk","SIP","VoIP"]},{"location":"asterisk-pattern/","title":"Special Characters Used in Pattern Matching","text":"<p>Pattern matches always begin with an underscore. This is how Asterisk recognizes that the extension is a pattern and not just an extension with a funny name. Within the pattern, we use various letters and characters to represent sets or ranges of numbers. Here are the most common letters:</p>"},{"location":"asterisk-pattern/#x","title":"X","text":"<p>The letter X or x represents a single digit from 0 to 9.</p>"},{"location":"asterisk-pattern/#z","title":"Z","text":"<p>The letter Z or z represents any digit from 1 to 9.</p>"},{"location":"asterisk-pattern/#n","title":"N","text":"<p>The letter N or n matches any digit from 2-9.</p>"},{"location":"asterisk-pattern/#ranges-used-in-pattern-matching","title":"Ranges used in Pattern Matching","text":"<p>A numeric range can be used to match against a dialed number. This is also called a Character Set</p>"},{"location":"asterisk-pattern/#1237-9","title":"[1237-9]","text":"<p>This pattern matches any digit or letter in the brackets. In this example, the pattern will match: 1,2,3,7,8,9</p>"},{"location":"asterisk-pattern/#wilcards-used-in-pattern-matching","title":"Wilcards used in Pattern Matching","text":"<p>The following special characters are considered wildcards</p> <ul> <li>. The '.' character matches one or more characters</li> <li>! The '!' character matches zero or more characters immediately</li> </ul> <p>The exclamation mark wildcard (!), behaves specially and will be further explained below in 'Other Special Characters' below.</p> <p>Please make sure to read 'Be Careful With Wildcards in Pattern Matches' below.</p>"},{"location":"asterisk-pattern/#basic-example","title":"Basic Example","text":"<p>Now let's look at a sample pattern. If you wanted to match all four-digit numbers that had the first two digits as six and four, you would create an extension that looks like:</p> <pre><code>exten =&gt; _64XX,1,SayDigits(${EXTEN})\n</code></pre> <p>In this example, each X represents a single digit, with any value from zero to nine.</p> <p>The above pattern will match the following examples:</p> <ul> <li>6400</li> <li>6401</li> <li>6450</li> <li>6499</li> </ul> <p>We're essentially saying \"The first digit must be a six, the second digit must be a four, the third digit can be anything from zero to nine, and the fourth digit can be anything from zero to nine\".</p>"},{"location":"asterisk-pattern/#complex-examples","title":"Complex Examples","text":"<p>Lets use some Character Sets and Wildcards</p> <pre><code>exten =&gt; _64X[4-9],1,SayDigits(${EXTEN})\nexten =&gt; _[6-4]4[4-9],1,SayDigits(${EXTEN})\nexten =&gt; _64.,1,SayDigits(${EXTEN})\n</code></pre> <p>The first example: The first must be a six, the second digit must be a four, the third digit can be anything from zero to nine, and the fourth digit must be between four and nine</p> <p>The second example: The first digit must be between six and four, the second digit must be four, the third digit must be between four and nine</p> <p>The third example: The first digit must be a six, the second digit must be a four, the third digit can be anything at all (including letters), and we will continue to collect digits until the user stops entering digits</p>"},{"location":"asterisk-pattern/#character-sets","title":"Character Sets","text":"<p>If we want to be more specific about a range of numbers, we can put those numbers or number ranges in square brackets to define a character set. For example, what if we wanted the second digit to be either a three or a four? One way would be to create two patterns (_64XX and _63XX), but a more compact method would be to do _6[34]XX. This specifies that the first digit must be a six, the second digit can be either a three or a four, and that the last two digits can be anything from zero to nine.</p> <p>You can also use ranges within square brackets. For example, [1-468] would match a single digit from one through four or six or eight. It does not match any number from one to four hundred sixty-eight!</p> <p>Note</p> <p>The X, N, and Z convenience notations mentioned earlier have no special meaning within a set. The only characters with special meaning within a set are the '-' character, to define a range between two characters, the  '\\' character to escape a special character available within a set, and  </p>"},{"location":"asterisk-pattern/#other-special-characters","title":"Other Special Characters","text":"<p>Within Asterisk patterns, we can also use a couple of other characters to represent ranges of numbers. The period character (.) at the end of a pattern matches one or more remaining characters. You put it at the end of a pattern when you want to match extensions of an indeterminate length. As an example, the pattern _9876. would match any number that began with 9876 and had at least one more character or digit.</p> <p>The exclamation mark (!) character is similar to the period and matches zero or more remaining characters. It is used in overlap dialing to dial through Asterisk. For example, _9876! would match any number that began with 9876 including 9876, and would respond that the number was complete as soon as there was an unambiguous match.</p> <p>Tip</p> <p>Asterisk treats a period or exclamation mark as the end of a pattern. If you want a period or exclamation mark in your pattern as a plain character you should put it into a character set: [.] or [!] .</p> <p>Warning</p> <p>Please be extremely cautious when using the period and exclamation mark characters in your pattern matches. They match more than just digits. They match on characters. If you're not careful to filter the input from your callers, a malicious caller might try to use these wildcards to bypass security boundaries on your system. For a more complete explanation of this topic and how you can protect yourself, please refer to the README-SERIOUSLY.bestpractices.txt file in the Asterisk source code.</p>"},{"location":"asterisk-pattern/#order-of-pattern-matching","title":"Order of Pattern Matching","text":"<p>Now let's show what happens when there is more than one pattern that matches the dialed number. How does Asterisk know which pattern to choose as the best match?</p> <p>Asterisk uses a simple set of rules to sort the extensions and patterns so that the best match is found first. The best match is simply the most specific pattern. The sorting rules are:</p> <ol> <li>The dash (-) character is ignored in extensions and patterns except when it is used in a pattern to specify a range in a character set. It has no effect in matching or sorting extensions.</li> <li>Non-pattern extensions are sorted in ASCII sort order before patterns.</li> <li>Patterns are sorted by the most constrained character set per digit first. By most constrained, we mean the pattern that has the fewest possible matches for a digit. As an example, the N character has eight possible matches (two through nine), while X has ten possible matches (zero through nine) so N sorts first.</li> <li>Character sets that have the same number of characters are sorted in ASCII sort order as if the sets were strings of the set characters. As an example, X is 0123456789 and [a-j] is abcdefghij so X sorts first. This sort ordering is important if the character sets overlap as with [0-4] and [4-8].</li> <li>The period (.) wildcard sorts after character sets.</li> <li>The exclamation mark (!) wildcard sorts after the period wildcard.</li> </ol> <p>Let's look at an example to better understand how this works. Let's assume Alice dials extension 6421, and she has the following patterns in her dialplan:</p> <pre><code>exten =&gt; _6XX1,1,SayAlpha(A)\nexten =&gt; _64XX,1,SayAlpha(B)\nexten =&gt; _640X,1,SayAlpha(C)\nexten =&gt; _6.,1,SayAlpha(D)\nexten =&gt; _64NX,1,SayAlpha(E)\nexten =&gt; _6[45]NX,1,SayAlpha(F)\nexten =&gt; _6[34]NX,1,SayAlpha(G)\n</code></pre> <p>Can you tell (without reading ahead) which one would match?</p> <p>Using the sorting rules explained above, the extensions sort as follows:  </p>"},{"location":"asterisk-pattern/#sorted-extensions","title":"Sorted extensions","text":"<pre><code>exten =&gt; _640X,1,SayAlpha(C)\nexten =&gt; _64NX,1,SayAlpha(E)\nexten =&gt; _64XX,1,SayAlpha(B)\nexten =&gt; _6[34]NX,1,SayAlpha(G)\nexten =&gt; _6[45]NX,1,SayAlpha(F)\nexten =&gt; _6XX1,1,SayAlpha(A)\nexten =&gt; _6.,1,SayAlpha(D)\n</code></pre> <p>When Alice dials 6421, Asterisk searches through its list of sorted extensions and uses the first matching extension. In this case _64NX is found.</p> <p>To verify that Asterisk actually does sort the extensions in the manner that we've shown, add the following extensions to the [users] context of your own dialplan.</p> <pre><code>exten =&gt; _6XX1,1,SayAlpha(A)\nexten =&gt; _64XX,1,SayAlpha(B)\nexten =&gt; _640X,1,SayAlpha(C)\nexten =&gt; _6.,1,SayAlpha(D)\nexten =&gt; _64NX,1,SayAlpha(E)\nexten =&gt; _6[45]NX,1,SayAlpha(F)\nexten =&gt; _6[34]NX,1,SayAlpha(G)\n</code></pre> <p>Reload the dialplan, and then type dialplan show 6421@users at the Asterisk CLI. Asterisk will show you all extensions that match in the [users] context. If you were to dial extension 6421 in the [users] context the first found extension will execute.</p> <pre><code>server*CLI&gt; dialplan show 6421@users\n[ Context 'users' created by 'pbxp_config' ]\n '_64NX' =&gt; 1. SayAlpha(E) [pbx_config]\n '_64XX' =&gt; 1. SayAlpha(B) [pbx_config]\n '_6[34]NX' =&gt; 1. SayAlpha(G) [pbx_config]\n '_6[45]NX' =&gt; 1. SayAlpha(F) [pbx_config]\n '_6XX1' =&gt; 1. SayAlpha(A) [pbx_config]\n '_6.' =&gt; 1. SayAlpha(D) [pbx_config]\n\n-= 6 extensions (6 priorities) in 1 context. =-\n</code></pre> <pre><code>server*CLI&gt; dialplan show users\n[ Context 'users' created by 'pbx_config' ]\n '_640X' =&gt; 1. SayAlpha(C) [pbx_config]\n '_64NX' =&gt; 1. SayAlpha(E) [pbx_config]\n '_64XX' =&gt; 1. SayAlpha(B) [pbx_config]\n '_6[34]NX' =&gt; 1. SayAlpha(G) [pbx_config]\n '_6[45]NX' =&gt; 1. SayAlpha(F) [pbx_config]\n '_6XX1' =&gt; 1. SayAlpha(A) [pbx_config]\n '_6.' =&gt; 1. SayAlpha(D) [pbx_config]\n\n-= 7 extensions (7 priorities) in 1 context. =-\n</code></pre> <p>You can dial extension 6421 to try it out on your own.</p> <p>Warning</p> <p>Please be aware that because of the way auto-fallthrough works, if Asterisk can't find the next priority number for the current extension or pattern match, it will also look for that same priority in a less specific pattern match. Consider the following example:</p> <pre><code>exten =&gt; 6410,1,SayDigits(987)\nexten =&gt; _641X,1,SayDigits(12345)\nexten =&gt; _641X,n,SayDigits(54321)\n</code></pre> <p>If you were to dial extension 6410, you'd hear \"nine eight seven five four three two one\".</p> <p>We strongly recommend you make the Hangup() application be the last priority of any extension to avoid this behaviour, unless you purposely want to fall through to a less specific match.</p>"},{"location":"asterisk-pattern/#matching-on-caller-id","title":"Matching on Caller ID","text":"<p>Within an extension handler, it is also possible to match based upon the Caller ID of the incoming channel by appending a forward slash to the dialed extension or pattern, followed by a Caller ID pattern to be matched. Consider the following example, featuring phones with Caller IDs of 101, 102 and 103.</p> <pre><code>exten =&gt; 306,1,NoOp()\nsame =&gt; n,Background(goodbye)\nsame =&gt; n,Hangup()\n\nexten =&gt; 306/_101,1,NoOp()\nsame =&gt; n,Background(year)\nsame =&gt; n,Hangup()\n\nexten =&gt; 306/_102,1,NoOp()\nsame =&gt; n,Background(beep)\nsame =&gt; n,Hangup()\n</code></pre> <p>The phone with Caller ID 101, when dialing 306, will hear the prompt \"year\" and will be hung up.  The phone with Caller ID 102, when dialing 306, will hear the \"beep\" sound and will be hung up.  The phone with Caller ID 103, or any other caller, when dialing 306, will hear the \"goodbye\" prompt and will be hung up.</p> <p>Warning</p> <p>Changing the value of CALLERID(num) variable inside of extension handler matched by Caller ID can immediately throw the call to another handler. Consider the following example:</p> <pre><code>[unexpected-jump-test]\n\nexten =&gt; s/_1XX,1,Set(CALLERID(num)=200) ; &lt;- Example call starts here\nsame =&gt; 2,Hangup() ; &lt;- This line is NEVER reached normally because of the assignment above\n\nexten =&gt; s/_2XX,1,SayDigits(1)\nsame =&gt; 2,SayDigits(2) ; &lt;- This is where the dialplan proceeds instead\nsame =&gt; 3,SayDigits(3)\nsame =&gt; 4,SayDigits(4)  \n\n---\n\nYou'd expect the call with Caller ID 100 to hang up, but instead you'd hear Asterisk saying \"two, three, four\".  \n</code></pre>"},{"location":"asterisk-voice/","title":"Instalar Paquete de Voces en Espa\u00f1ol","text":"<p>En 2006, un grupo de usuarios de Asterisk-ES iniciaron una campa\u00f1a de crownfunding para pagar a una locutora profesional para que grabara las locuciones que utilizar Asterisk para poder hacer uso de ellas en un entorno profesional.</p> <p>Mucho m\u00e1s tarde, concretamente 17 a\u00f1os, los archivos grabados entonces siguen funcionando perfectamente como el primer d\u00eda, si bien hemos tenido que modificar la estructura de los directorios para que funcionen en versiones de Asterisk m\u00e1s recientes, los archivos siguen siendo una pieza fundamental en cualquier sistema Asterisk en espa\u00f1ol.</p> <p>Aqu\u00ed tienes los paquetes completos (core + extras) unificados en un \u00fanico paquete y listo para instalar.</p> <p>P\u00e1gina original Sinologic</p>"},{"location":"asterisk-voice/#paquete-de-locuciones-para-asterisk-en-espanol-es_es","title":"Paquete de locuciones para Asterisk en Espa\u00f1ol (es_ES)","text":"<p>Descargar en formato:</p> <ul> <li> Alaw</li> <li> ulaw</li> <li> G.729</li> <li> gsm</li> </ul>"},{"location":"kamailio-install/","title":"Instalar Kamailio con sqlite3","text":""},{"location":"kamailio-install/#instalacion","title":"Instalaci\u00f3n","text":"<p>Start by installing Kamailio and the associated SQLite module, optionally the command line interface for SQLite which can be useful for poking around the Kamailio database:</p> <pre><code>sudo apt-get install kamailio kamailio-sqlite-modules sqlite3\n</code></pre>"},{"location":"kamailio-install/#database-creation","title":"Database Creation","text":"<p>Next, set up the SQLite database. Open up the kamctlrc file with a preferred editor:</p> <pre><code>sudo vim /etc/kamailio/kamctlrc\n</code></pre> <p>Find the DBENGINE variable and set it to SQLITE:</p> <pre><code>DBENGINE=SQLITE\n</code></pre>"},{"location":"verbio-grabar/","title":"Use the cli to generate audio file with Verbio TTS","text":"<p>Generate a raw audio file named \"ttsdemo_output.raw\".</p> <pre><code>ttsdemo \"aurora\" \"es\" \"&lt;prosody rate='150'&gt; Hola, esto es una prueba &lt;break time='300ms'&gt;\"\n</code></pre> <p>Then use sox app to convert file to 16bits wav audio file.</p> <pre><code>sox -t raw -r 8000 -c 1 -e signed-integer -b 16 ttsdemo_output.raw MI_AUDIO.wav\n</code></pre>","tags":["SIP","VoIP","Verbio"]},{"location":"blog/","title":"Blog Visin","text":"<p>Pruebas de Blog sobre MKDocs</p>","tags":["Blog"]},{"location":"blog/2024/04/02/plantillas-en-asterisk/","title":"Plantillas en Asterisk","text":"<p>Una forma muy c\u00f3moda de configurar asterisk es usando las plantillas. Como en cualquier sistema, hay muchisimos valores de configuraci\u00f3n comunes por esto el uso de plantillas puede ayudar mucho.</p>","tags":["SIP","VoIP"]},{"location":"blog/2024/04/02/plantillas-en-asterisk/#anadir-parametros-adicionales-a-un-contexto","title":"A\u00f1adir par\u00e1metros adicionales a un contexto","text":"<p>Aunque esto no es una plantilla en si, se basa en el mismo principio de las plantillas. Podemos a\u00f1adir a una configuraci\u00f3n ya definida, par\u00e1metros adicionales. Adem\u00e1s, definir de nuevo otro par\u00e1metro con distinto valor sobre-escribe este valor. Esto tambi\u00e9n es muy util e interesante.</p> <p>Por ejemplo, yo soy de los que le gusta disponer de los archivos originales en el directorio /etc/asterisk comentando todo lo que no voy a usar, y hacer un <code>include</code> de un nuevo archivo para mis configuraciones.</p> Archivo pjsip.conf<pre><code>...\n\n#include pjsip_personal.conf\n</code></pre> <p>A\u00f1adiendo la l\u00ednea anterior al final del archivo <code>pjsip.conf</code> podemos crear un nuevo archivo para guardar nuestra configuraci\u00f3n personal.</p> Archivo pjsip_personal.conf<pre><code>[global](+)\nuser_agent=Mi PBX\n\n...\n</code></pre> <p>A\u00f1adiendo <code>(+)</code> a un contexto que ya exista definido, podemos a\u00f1adir o cambiar alguna configuraci\u00f3n. En el caso anterior, defino el <code>user_agent</code> que quiero que se muestre en los mensajes SIP</p>","tags":["SIP","VoIP"]},{"location":"blog/2024/04/02/plantillas-en-asterisk/#plantillas","title":"Plantillas","text":"<p>Las plantillas se definen a\u00f1adiendo <code>(!)</code> al nombre de la plantilla. Y para usarla se a\u00f1ade el nombre a lo que estemos configurando. Un ejemplo es:</p> Archivo pjsip_personal.conf<pre><code>...\n[aor-personal](!)\ntype=aor\nqualify_frequency=60\n\n\n...\n\n[1234](aor-personal)\ncontact=sip:1234@10.10.10.10:5060\n</code></pre> <p>El ejemplo anterior ser\u00eda lo mismo que hacer:</p> Archivo pjsip_personal.conf<pre><code>[1234]\ntype=aor\nqualify_frequency=60\ncontact=sip:1234@10.10.10.10:5060\n</code></pre> <p>Si todas las extensiones que est\u00e9s configurando en la definici\u00f3n de <code>aor</code> van a llevar el par\u00e1metro <code>qualify_frequency=60</code> usamos esa plantilla en todas las extensiones para no tener que repetir esos par\u00e1metros en todas las extensiones.</p>","tags":["SIP","VoIP"]},{"location":"blog/2025/07/12/notas-mkdocs/","title":"Notas mkdocs","text":"","tags":["Blog","mkdocs","material"]},{"location":"blog/2025/07/12/notas-mkdocs/#creating-your-site","title":"Creating your site","text":"<p>Go to the directory where you want your project to be located and enter:</p> <pre><code>mkdocs new .\n</code></pre> <p>Alternatively, if you're running Material for MkDocs from within Docker, use:</p> Unix, PowershellWindows (cmd) <pre><code>docker run --rm -it -v ${PWD}:/docs squidfunk/mkdocs-material new .\n</code></pre> <pre><code>docker run --rm -it -v \"%cd%\":/docs squidfunk/mkdocs-material new .\n</code></pre> <p>This will create the following structure:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre>","tags":["Blog","mkdocs","material"]},{"location":"blog/2025/07/12/notas-mkdocs/#configuration","title":"Configuration","text":"","tags":["Blog","mkdocs","material"]},{"location":"blog/2025/07/12/notas-mkdocs/#minimal-configuration","title":"Minimal configuration","text":"<p>Simply set the <code>site_name</code> and add the following lines to <code>mkdocs.yml</code> to enable the theme:</p> <pre><code>site_name: My site\nsite_url: https://mydomain.org/mysite\ntheme:\n  name: material\n</code></pre> <p>The <code>site_url</code> setting is important for a number of reasons. By default, MkDocs will assume that your site is hosted at the root of your domain. This is not the case, for example, when [publishing to GitHub pages] - unless you use a custom domain. Another reason is that some of the plugins require the <code>site_url</code> to be set, so you should always do this.</p> Recommended: configuration validation and auto-complete <p>In order to minimize friction and maximize productivity, Material for MkDocs provides its own [schema.json]<sup>1</sup> for <code>mkdocs.yml</code>. If your editor supports YAML schema validation, it's definitely recommended to set it up:</p> Visual Studio CodeOther <ol> <li>Install <code>vscode-yaml</code> for YAML language support.</li> <li> <p>Add the schema under the <code>yaml.schemas</code> key in your user or     workspace <code>settings.json</code>:</p> <pre><code>{\n  \"yaml.schemas\": {\n    \"https://squidfunk.github.io/mkdocs-material/schema.json\": \"mkdocs.yml\"\n  },\n  \"yaml.customTags\": [ // (1)!\n    \"!ENV scalar\",\n    \"!ENV sequence\",\n    \"!relative scalar\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.to_svg\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.twemoji\",\n    \"tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format\",\n    \"tag:yaml.org,2002:python/object/apply:pymdownx.slugs.slugify mapping\"\n  ]\n}\n</code></pre> <ol> <li>This setting is necessary if you plan to use [icons and emojis],     or Visual Studio Code will show errors on certain lines.</li> </ol> </li> </ol> <ol> <li>Ensure your editor of choice has support for YAML schema validation.</li> <li> <p>Add the following lines at the top of <code>mkdocs.yml</code>:</p> <pre><code># yaml-language-server: $schema=https://squidfunk.github.io/mkdocs-material/schema.json\n</code></pre> </li> </ol>","tags":["Blog","mkdocs","material"]},{"location":"blog/2025/07/12/notas-mkdocs/#advanced-configuration","title":"Advanced configuration","text":"<p>Material for MkDocs comes with many configuration options. The setup section explains in great detail how to configure and customize colors, fonts, icons and much more:</p> <ul> <li>[Changing the colors]</li> <li>[Changing the fonts]</li> <li>[Changing the language]</li> <li>[Changing the logo and icons]</li> <li>[Ensuring data privacy]</li> <li>[Setting up navigation]</li> <li>[Setting up site search]</li> <li>[Setting up site analytics]</li> <li>[Setting up social cards]</li> <li>[Setting up a blog]</li> <li>[Setting up tags]</li> <li>[Setting up versioning]</li> <li>[Setting up the header]</li> <li>[Setting up the footer]</li> <li>[Adding a git repository]</li> <li>[Adding a comment system]</li> <li>[Building an optimized site]</li> <li>[Building for offline usage]</li> </ul>","tags":["Blog","mkdocs","material"]},{"location":"blog/2025/07/12/notas-mkdocs/#templates","title":"Templates","text":"<p>If you want to jump start a new project, you can use one of our growing collection of templates:</p> <ul> <li> <p> Blog</p> <p>Create a blog</p> </li> <li> <p> Social cards</p> <p>Create documentation with social cards</p> </li> </ul>","tags":["Blog","mkdocs","material"]},{"location":"blog/2025/07/12/notas-mkdocs/#previewing-as-you-write","title":"Previewing as you write","text":"<p>MkDocs includes a live preview server, so you can preview your changes as you write your documentation. The server will automatically rebuild the site upon saving. Start it with:</p> <pre><code>mkdocs serve # (1)!\n</code></pre> <ol> <li> <p>If you have a large documentation project, it might take minutes until     MkDocs has rebuilt all pages for you to preview. If you're only interested     in the current page, the <code>--dirtyreload</code> flag will make     rebuilds much faster:</p> <pre><code>mkdocs serve --dirtyreload\n</code></pre> </li> </ol> <p>If you're running Material for MkDocs from within Docker, use:</p> Unix, PowershellWindows <pre><code>docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material\n</code></pre> <pre><code>docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material\n</code></pre> <p>Point your browser to [localhost:8000][live preview] and you should see:</p> <p>[![Creating your site]][Creating your site]</p>","tags":["Blog","mkdocs","material"]},{"location":"blog/2025/07/12/notas-mkdocs/#building-your-site","title":"Building your site","text":"<p>When you're finished editing, you can build a static site from your Markdown files with:</p> <pre><code>mkdocs build\n</code></pre> <p>If you're running Material for MkDocs from within Docker, use:</p> Unix, PowershellWindows <pre><code>docker run --rm -it -v ${PWD}:/docs squidfunk/mkdocs-material build\n</code></pre> <pre><code>docker run --rm -it -v \"%cd%\":/docs squidfunk/mkdocs-material build\n</code></pre> <p>If you intend to distribute your documentation as a set of files to be read from a local filesystem rather than a web server (such as in a <code>.zip</code> file), please read the notes about [building for offline usage].</p> <ol> <li> <p>If you're a MkDocs plugin or Markdown extension author and your project works with Material for MkDocs, you're very much invited to contribute a schema for your extension or plugin as part of a pull request on GitHub. If you already have a schema defined, or wish to self-host your schema to reduce duplication, you can add it via $ref.\u00a0\u21a9</p> </li> </ol>","tags":["Blog","mkdocs","material"]},{"location":"blog/2024/04/01/post-de-pruebas/","title":"Post de pruebas","text":"<p>Este es un post de pruebas con MarkDown</p>","tags":["Blogs"]},{"location":"blog/2024/04/01/post-de-pruebas/#code","title":"Code","text":"","tags":["Blogs"]},{"location":"blog/2024/04/01/post-de-pruebas/#ejemplos","title":"Ejemplos","text":"","tags":["Blogs"]},{"location":"blog/2024/04/01/post-de-pruebas/#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the <code>py</code> at the comienzo start:</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>","tags":["Blogs"]},{"location":"blog/2024/04/01/post-de-pruebas/#with-a-title","title":"With a title","text":"bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>","tags":["Blogs"]},{"location":"blog/2024/04/01/post-de-pruebas/#with-line-numbers","title":"With line numbers","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>","tags":["Blogs"]},{"location":"blog/2024/04/01/post-de-pruebas/#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> <p>Some <code>code</code> goes here.(1)</p> <ol> <li> I'm an annotation!</li> </ol>","tags":["Blogs"]},{"location":"blog/2024/04/01/post-de-pruebas/#icons-and-emojs","title":"Icons and Emojs","text":"","tags":["Blogs"]},{"location":"blog/2024/04/01/un-segundo-post/","title":"Un segundo post","text":"<p>Esto es un segundo post de pruebas</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"blog/2024/04/02/pjsip-trunk/","title":"PJSIP Trunk","text":"<p>Ejemplos de SIP Trunk con channel pjsip asterisk</p>","tags":["SIP","VoIP"]},{"location":"blog/2024/04/02/pjsip-trunk/#user-agent-pjsip","title":"User Agent PJSIP","text":"<p>Bajo el contexto \"[Global]\" se puede definir el user_agent que mostrar en los paquetes  SIP.</p> <p>O bien, podemos ponerlo en un archivo separado , llamado este con un <code>#include pjsip_personal.conf</code> y usar <code>[Global](+)</code> para que se a\u00f1ada al final de lo definido en Global.</p> <pre><code>...\n[Global](+)\nuser_agent=SBC XXXX/v1.0\n...\n</code></pre>","tags":["SIP","VoIP"]},{"location":"blog/2024/04/02/pjsip-trunk/#options-pjsip","title":"OPTIONS PJSIP","text":"<p>PJSIP enviar\u00e1 el nombre del endpoint como contact para el OPTION El que recibe ese OPTION tiene que tener en el contexto del SIP Trunk ese contact. Por ejemplo:</p> <pre><code>OPTIONS sip:LABSIP@10.12.5.42:5060 SIP/2.0\nVia: SIP/2.0/UDP 10.12.5.41:5060;rport;branch=z9hG4bKPjc7b3438d-9987-4d5f-8543-bb506667dd20\nFrom: &lt;sip:LABSIP@10.12.5.41&gt;;tag=99614688-0a48-48df-9b3b-62172ac4da98\nTo: &lt;sip:LABSIP@10.12.5.42&gt;\nContact: &lt;sip:LABSIP@10.12.5.41:5060&gt;\nCall-ID: 730b281f-04f1-4600-8e9e-77ef1910e0de\nCSeq: 33191 OPTIONS\nMax-Forwards: 70\nUser-Agent: SBC SCCOM/v1.0\nContent-Length:  0\n</code></pre> <p>En este caso , usarmos el contexto \"from-trunk\" para este SIP Trunk, entonces definimos en nuestro \"extensions\":</p> <pre><code>[from-trunk]\n\n\nexten =&gt; LABSIP,1,NoOp()\n</code></pre> <p>De esta forma ya responderemos un 200 OK</p> <pre><code>SIP/2.0 200 OK\nVia: SIP/2.0/UDP 10.12.5.42:5060;rport=5060;received=10.12.5.42;branch=z9hG4bKPje9af206d-956f-4e6e-b2fd-548fa8080b16\nCall-ID: d08befbb-0595-4506-a906-be08ec52c8c1\nFrom: &lt;sip:LABSIP@10.12.5.42&gt;;tag=1fd91fc3-1c6d-481f-ba8a-fbe7b2f1526c\nTo: &lt;sip:LABSIP@10.12.5.41&gt;;tag=z9hG4bKPje9af206d-956f-4e6e-b2fd-548fa8080b16\nCSeq: 61932 OPTIONS\nAccept: application/sdp, application/simple-message-summary, application/xpidf+xml, application/cpim-pidf+xml, application/dialog-info+xml, application/pidf+xml, application/pidf+xml, application/dialog-info+xml, application/simple-message-summary, message/sipfrag;version=2.0\nAllow: OPTIONS, REGISTER, SUBSCRIBE, NOTIFY, PUBLISH, INVITE, ACK, BYE, CANCEL, UPDATE, PRACK, MESSAGE, REFER\nSupported: 100rel, timer, replaces, norefersub\nAccept-Encoding: identity\nAccept-Language: en\nServer: SBC SCCOM/v1.0\nContent-Length:  0\n</code></pre>","tags":["SIP","VoIP"]},{"location":"blog/2024/04/02/pjsip-trunk/#sin-auth-solo-por-ip","title":"Sin auth, solo por IP","text":"Archivo pjsip.conf<pre><code>[SBC1]\ntype=aor\nqualify_frequency=30\ncontact=sip:10.9.94.251:5060\n\n[fijos]\ntype=endpoint\ntransport=0.0.0.0-udp\ncontext=from-trunk\nallow=!all,g729\naors=SBC1\n\n[SBC1]\ntype=identify\nendpoint=fijos\nmatch=10.9.94.251\n</code></pre>","tags":["SIP","VoIP"]},{"location":"blog/2024/04/02/pjsip-trunk/#con-auth-usuario-y-clave","title":"Con Auth, usuario y clave","text":"Archivo pjsip.conf<pre><code>;=====================Visin=====\n; Configuracion para casa Lalin\n; AOR\n[eXXXXXXXXXX]\ntype=aor\nqualify_frequency=120\ncontact=sip:eXXXXXXXXXX@ims.operador.com:5060\noutbound_proxy=sip:evimsemad.operador.com\\;lr\n\n; AUTH\n[eXXXXXXXXXX]\ntype=auth\nauth_type=userpass\npassword=******enc******\nusername=eXXXXXXXXXX\n\n; ENDPOINT\n[eXXXXXXXXXX]\ntype=endpoint\ntransport=0.0.0.0-udp\ncontext=from-trunk\ndisallow=all\nallow = g729,alaw,gsm\naors=eXXXXXXXXXX\nsend_connected_line=false\nlanguage=es\noutbound_proxy=sip:evimsemad.operador.com\\;lr\noutbound_auth=eXXXXXXXXXX\nfrom_domain=ims.operador.com\nfrom_user=+34988222222\ncontact_user=+34988222222\nuser_eq_phone=yes\nt38_udptl=no\nt38_udptl_ec=none\nfax_detect=no\ntrust_id_inbound=no\nt38_udptl_nat=no\nidentify_by=auth_username\ndirect_media=no\nrewrite_contact=yes\nrtp_symmetric=yes\ndtmf_mode=auto\n\n; IDENTIFY\n[eXXXXXXXXXX]\ntype=identify\nendpoint=eXXXXXXXXXX\nmatch=evimsemad.operador.com\n\n; REGISTRATION\n[eXXXXXXXXXX]\ntype=registration\ntransport=0.0.0.0-udp\noutbound_auth=eXXXXXXXXXX\nretry_interval=60\nfatal_retry_interval=30\nforbidden_retry_interval=30\nmax_retries=10000\nexpiration=3600\nauth_rejection_permanent=no\nline=no\ncontact_user=+34988222222\nserver_uri=sip:ims.operador.com\nclient_uri=sip:+34988222222@ims.operador.com\noutbound_proxy=sip:evimsemad.operador.com\\;lr\n</code></pre> <pre><code>;========= OPENSIPS =====\n; Configuracion para OPENSIPS\n; AOR\n[visincito]\ntype=aor\nqualify_frequency=120\ncontact=sip:visincito@opensips.org\noutbound_proxy=sip:opensips.org\\;lr\n\n; AUTH\n[visincito]\ntype=auth\nauth_type=userpass\npassword=******enc******\nusername=visincito\n\n; ENDPOINT\n[visincito]\ntype=endpoint\ntransport=0.0.0.0-udp\ncontext=from-trunk\ndisallow=all\nallow = g729,alaw,gsm\naors=visincito\nsend_connected_line=false\nlanguage=es\n;outbound_proxy=sip:evimsemad.operador.com\\;lr\n;outbound_auth=eXXXXXXXXXX\n;from_domain=ims.operador.com\n;from_user=+34988222222\n;contact_user=+34988222222\nuser_eq_phone=yes\nt38_udptl=no\nt38_udptl_ec=none\nfax_detect=no\ntrust_id_inbound=no\nt38_udptl_nat=no\nidentify_by=auth_username\ndirect_media=no\nrewrite_contact=yes\nrtp_symmetric=yes\ndtmf_mode=auto\n\n; IDENTIFY\n[visincito]\ntype=identify\nendpoint=visincito\nmatch=opensips.org\n\n; REGISTRATION\n[visincito]\ntype=registration\ntransport=0.0.0.0-udp\n;outbound_auth=eXXXXXXXXXX\nretry_interval=60\nfatal_retry_interval=30\nforbidden_retry_interval=30\nmax_retries=10000\nexpiration=3600\nauth_rejection_permanent=no\nline=no\n;contact_user=+34988222222\n;server_uri=sip:ims.operador.com\n;client_uri=sip:+34988222222@ims.operador.com\n;outbound_proxy=sip:evimsemad.operador.com\\;lr\n</code></pre> <pre><code>;========= sip2sip.info =====\n; Configuracion para OPENSIPS\n; AOR\n[visincito]\ntype=aor\nqualify_frequency=120\ncontact=sip:visincito@sip2sip.info\noutbound_proxy=proxy.sipthor.net\\;lr\n\n; AUTH\n[visincito]\ntype=auth\nauth_type=userpass\npassword=******enc******\nusername=visincito\n\n; ENDPOINT\n[visincito]\ntype=endpoint\ntransport=0.0.0.0-udp\ncontext=from-trunk\ndisallow=all\nallow = g729,alaw,gsm\naors=visincito\nsend_connected_line=false\nlanguage=es\nidentify_by=auth_username\ndirect_media=yes\nrewrite_contact=yes\nrtp_symmetric=yes\ndtmf_mode=auto\n\n; IDENTIFY\n[visincito]\ntype=identify\nendpoint=visincito\nmatch=sip2sip.info\nmatch=proxy.sipthor.net\n\n; REGISTRATION\n[visincito]\ntype=registration\ntransport=0.0.0.0-udp\nretry_interval=60\nfatal_retry_interval=30\nforbidden_retry_interval=30\nmax_retries=10000\nexpiration=3600\nauth_rejection_permanent=no\nline=no\n</code></pre>","tags":["SIP","VoIP"]},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/mkdocs/","title":"MkDocs","text":""},{"location":"blog/category/voip/","title":"VoIP","text":""},{"location":"blog/category/asterisk/","title":"Asterisk","text":""},{"location":"blog/category/blog/","title":"Blog","text":""},{"location":"blog/category/pruebas/","title":"Pruebas","text":""}]}